:PROPERTIES:
:ID:       ac338634-949e-4e3a-8d75-45bed92243c6
:END:
#+title: Setting up and using 
#+title: Xilinx KRIA KV260
#+filetags: :export:
#+subtitle: \begin{CJK}{UTF8}{min}南山大学\end{CJK}
#+author: Vincent Conus
#+date: 2023-8-24
#+DESCRIPTION: A report presenting how to use and set Xilinx's Kria board
#+LANGUAGE: English

#+OPTIONS: toc:t date:t title:t

#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS:[10pt]
#+LATEX_HEADER: \usepackage[a4paper, total={6.5in, 9in}]{geometry}

#+LATEX_HEADER: \usepackage{minted}
#+LATEX_HEADER: \setminted{breaklines}
#+LATEX_HEADER: \usepackage[AUTO]{inputenc}
#+LATEX_HEADER: \renewcommand{\familydefault}{\sfdefault}
#+LATEX_HEADER: \usemintedstyle{vs}

#+LATEX_HEADER: \usepackage{CJKutf8}
#+LATEX_HEADER: \usepackage{xurl}
#+LATEX_HEADER: \usepackage{fontawesome5}
#+LATEX_HEADER: \usepackage{hyperref}
#+LATEX_HEADER: \usepackage{graphicx}
#+LATEX_HEADER: \usepackage{float}

#+LATEX_HEADER: \newcommand{\gitlab}[1]{%
#+LATEX_HEADER:    \href{#1}{GitLab \faGitlab}}

#+begin_src emacs-lisp :exports results :results none :eval export
  (make-variable-buffer-local 'org-latex-title-command)
  (setq org-latex-title-command (concat
     "\\begin{titlepage}\n"
     "\\centering\n"
     "{\\LARGE %t \\par }\n"
     "\\vspace{5mm}\n"
     "{\\large %s \\par}\n"
     "\\vspace{1cm}\n"
     "{\\large %D \\par}\n"
     "\\vspace{2cm}\n"
     "{\\large %a -  Source available at \\gitlab{https://gitlab.com/sunoc/xilinx-kria-kv260-documentation} \\par}\n"
     "\\vspace{3cm}\n"
     "\\includegraphics[width=0.8\\textwidth]{./img/board}"
     "\\end{titlepage}\n"))
#+end_src

#+begin_src emacs-lisp :exports results :results none :eval export
    (make-variable-buffer-local 'org-latex-toc-command)
    (setq org-latex-toc-command (concat
       "\\tableofcontents\n"
       "\\pagebreak\n"))
#+end_src

* Introduction

** Motivation
This guide will present how to setup and use Xilinx's KRIA board, in particular
for running ROS on a host Ubuntu system, as well as for deploying
micro-ROS as a firmware on the MCU part of this board's chip.

** Build instructions for this report
The base file for this report is actually this README.org file itself.
However, upon local build, this file is regularly exported as
a ~.tex~ file that can be built normally.
On a moderately recent Ubuntu-base distribution, the following packages seemed to be required to build the
report:

#+BEGIN_SRC bash
  sudo apt-get install texlive-base texlive-latex-recommended texlive-lang-japanese
#+END_SRC

Then, the actual build can be made with a simple:

#+BEGIN_SRC bash
  pdflatex instructions.tex
#+END_SRC

No fancy Lua or theme at the moment !

** Automatic build with CI/CD pipeline
If you don't want to build the report yourself, a CI pipeline is used to make it on GitLab.

You can check the steps in the .gitlab-ci.yml file.
This build uses a base Ubuntu image and basically takes the same steps as presented above for a local build.

A PDF artifact can be downloaded.

* Boot firmware
The goal for the Linux side of the deployment is to
have the latest LTS version of Ubuntu up and running.
In order to be able to boot such a newer version of Linux, the
boot image of the board must first be updated.

The procedure is available in [[https://docs.xilinx.com/r/en-US/ug1089-kv260-starter-kit/Firmware-Update][the official documentation]],
but I will present it step by step here.

** Getting the new firmware
A 2022 version of the board firmware is required in order to run the latest
version of Ubuntu properly.

The image can be downloaded at [[https://xilinx-wiki.atlassian.net/wiki/spaces/A/pages/1641152513/Kria+K26+
SOMoot-FW-update-with-xmutil][the atlassian page]] on the topic,
or even directly with the following command:

#+BEGIN_SRC sh
  wget https://www.xilinx.com/member/forms/download/\
       design-license-xef.html?filename=BOOT-k26-starter-kit-20230516185703.bin
#+END_SRC


** Reaching the board recovery tool
Now the firmware ~.bin~ image is available, it is possible to update it using the
boards recovery tool. Here are the steps that must be taken in order to reach
this tool and update the board:

+ Connect the board to your machine via a Ethernet cable.
  This will obviously cut you internet access, so you should be set for that.
+ Select the wired network as your connection (must be "forced", since it
  doesn't have internet access).
+ Set a fixed IP address for your machine, in the ~192.168.0.1/24~
  range, except the specific ~192.168.0.111~, which will be used by the
  board.
+ Using a web browser on your host machine, access
  ~http://192.168.0.111~. Thou shall now see the interface, as visible on
  the figure [[fig:recovery]] below.

#+ATTR_LATEX: :width 1\textwidth
#+CAPTION: The recovery tool for the board, access from Firefox. We can see
#+CAPTION: board information at the center, and the tools to upload the firmware at
#+CAPTION:   the bottom of the page.
#+NAME: fig:recovery
[[file:img/recovery.png]]

** Updating the boot firmware
From this "recovery" page, it is possible to upload the ~.bin~ file downloaded previously onto
the board using the "Recover Image" section at the bottom right of the page.

The board can be re-booted afterwards.
